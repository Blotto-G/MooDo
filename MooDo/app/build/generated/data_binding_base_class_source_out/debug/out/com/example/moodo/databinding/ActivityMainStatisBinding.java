// Generated by view binder compiler. Do not edit!
package com.example.moodo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.moodo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainStatisBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView allTodo;

  @NonNull
  public final ImageView btnClose;

  @NonNull
  public final TextView completeTodo;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final ImageView logo;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final LinearLayout moodColorLayout;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextView tdListTxt;

  @NonNull
  public final LinearLayout topInfo;

  @NonNull
  public final ImageView tvMoodMax;

  @NonNull
  public final TextView txtEmotion;

  @NonNull
  public final TextView userName;

  private ActivityMainStatisBinding(@NonNull ConstraintLayout rootView, @NonNull TextView allTodo,
      @NonNull ImageView btnClose, @NonNull TextView completeTodo,
      @NonNull LinearLayout linearLayout3, @NonNull ImageView logo, @NonNull ConstraintLayout main,
      @NonNull LinearLayout moodColorLayout, @NonNull RecyclerView recyclerView,
      @NonNull TextView tdListTxt, @NonNull LinearLayout topInfo, @NonNull ImageView tvMoodMax,
      @NonNull TextView txtEmotion, @NonNull TextView userName) {
    this.rootView = rootView;
    this.allTodo = allTodo;
    this.btnClose = btnClose;
    this.completeTodo = completeTodo;
    this.linearLayout3 = linearLayout3;
    this.logo = logo;
    this.main = main;
    this.moodColorLayout = moodColorLayout;
    this.recyclerView = recyclerView;
    this.tdListTxt = tdListTxt;
    this.topInfo = topInfo;
    this.tvMoodMax = tvMoodMax;
    this.txtEmotion = txtEmotion;
    this.userName = userName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainStatisBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainStatisBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main_statis, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainStatisBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.allTodo;
      TextView allTodo = ViewBindings.findChildViewById(rootView, id);
      if (allTodo == null) {
        break missingId;
      }

      id = R.id.btnClose;
      ImageView btnClose = ViewBindings.findChildViewById(rootView, id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.completeTodo;
      TextView completeTodo = ViewBindings.findChildViewById(rootView, id);
      if (completeTodo == null) {
        break missingId;
      }

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.logo;
      ImageView logo = ViewBindings.findChildViewById(rootView, id);
      if (logo == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.moodColorLayout;
      LinearLayout moodColorLayout = ViewBindings.findChildViewById(rootView, id);
      if (moodColorLayout == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.tdListTxt;
      TextView tdListTxt = ViewBindings.findChildViewById(rootView, id);
      if (tdListTxt == null) {
        break missingId;
      }

      id = R.id.top_info;
      LinearLayout topInfo = ViewBindings.findChildViewById(rootView, id);
      if (topInfo == null) {
        break missingId;
      }

      id = R.id.tvMoodMax;
      ImageView tvMoodMax = ViewBindings.findChildViewById(rootView, id);
      if (tvMoodMax == null) {
        break missingId;
      }

      id = R.id.txt_emotion;
      TextView txtEmotion = ViewBindings.findChildViewById(rootView, id);
      if (txtEmotion == null) {
        break missingId;
      }

      id = R.id.userName;
      TextView userName = ViewBindings.findChildViewById(rootView, id);
      if (userName == null) {
        break missingId;
      }

      return new ActivityMainStatisBinding((ConstraintLayout) rootView, allTodo, btnClose,
          completeTodo, linearLayout3, logo, main, moodColorLayout, recyclerView, tdListTxt,
          topInfo, tvMoodMax, txtEmotion, userName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
