// Generated by view binder compiler. Do not edit!
package com.example.moodo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.moodo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTodoListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView endToDo;

  @NonNull
  public final TextView itemToDo;

  @NonNull
  public final TextView saveEndDate;

  @NonNull
  public final TextView saveStartDate;

  @NonNull
  public final TextView startToDo;

  private ItemTodoListBinding(@NonNull LinearLayout rootView, @NonNull TextView endToDo,
      @NonNull TextView itemToDo, @NonNull TextView saveEndDate, @NonNull TextView saveStartDate,
      @NonNull TextView startToDo) {
    this.rootView = rootView;
    this.endToDo = endToDo;
    this.itemToDo = itemToDo;
    this.saveEndDate = saveEndDate;
    this.saveStartDate = saveStartDate;
    this.startToDo = startToDo;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTodoListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTodoListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_todo_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTodoListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.endToDo;
      TextView endToDo = ViewBindings.findChildViewById(rootView, id);
      if (endToDo == null) {
        break missingId;
      }

      id = R.id.itemToDo;
      TextView itemToDo = ViewBindings.findChildViewById(rootView, id);
      if (itemToDo == null) {
        break missingId;
      }

      id = R.id.saveEndDate;
      TextView saveEndDate = ViewBindings.findChildViewById(rootView, id);
      if (saveEndDate == null) {
        break missingId;
      }

      id = R.id.saveStartDate;
      TextView saveStartDate = ViewBindings.findChildViewById(rootView, id);
      if (saveStartDate == null) {
        break missingId;
      }

      id = R.id.startToDo;
      TextView startToDo = ViewBindings.findChildViewById(rootView, id);
      if (startToDo == null) {
        break missingId;
      }

      return new ItemTodoListBinding((LinearLayout) rootView, endToDo, itemToDo, saveEndDate,
          saveStartDate, startToDo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
