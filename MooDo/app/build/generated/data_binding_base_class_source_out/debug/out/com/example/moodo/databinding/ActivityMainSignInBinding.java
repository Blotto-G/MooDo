// Generated by view binder compiler. Do not edit!
package com.example.moodo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.moodo.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainSignInBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView btnClose;

  @NonNull
  public final ImageButton btnKakaoSignIn;

  @NonNull
  public final Button btnSignIn;

  @NonNull
  public final Button btnSignUp;

  @NonNull
  public final TextInputEditText edtId;

  @NonNull
  public final TextInputEditText edtPw;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout linearLayout4;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextInputLayout textInputLayout;

  @NonNull
  public final TextInputLayout textInputLayout2;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView title01;

  private ActivityMainSignInBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView btnClose,
      @NonNull ImageButton btnKakaoSignIn, @NonNull Button btnSignIn, @NonNull Button btnSignUp,
      @NonNull TextInputEditText edtId, @NonNull TextInputEditText edtPw,
      @NonNull LinearLayout linearLayout, @NonNull LinearLayout linearLayout4,
      @NonNull ConstraintLayout main, @NonNull TextInputLayout textInputLayout,
      @NonNull TextInputLayout textInputLayout2, @NonNull TextView textView,
      @NonNull TextView textView2, @NonNull TextView title01) {
    this.rootView = rootView;
    this.btnClose = btnClose;
    this.btnKakaoSignIn = btnKakaoSignIn;
    this.btnSignIn = btnSignIn;
    this.btnSignUp = btnSignUp;
    this.edtId = edtId;
    this.edtPw = edtPw;
    this.linearLayout = linearLayout;
    this.linearLayout4 = linearLayout4;
    this.main = main;
    this.textInputLayout = textInputLayout;
    this.textInputLayout2 = textInputLayout2;
    this.textView = textView;
    this.textView2 = textView2;
    this.title01 = title01;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainSignInBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainSignInBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main_sign_in, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainSignInBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnClose;
      ImageView btnClose = ViewBindings.findChildViewById(rootView, id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.btnKakaoSignIn;
      ImageButton btnKakaoSignIn = ViewBindings.findChildViewById(rootView, id);
      if (btnKakaoSignIn == null) {
        break missingId;
      }

      id = R.id.btnSignIn;
      Button btnSignIn = ViewBindings.findChildViewById(rootView, id);
      if (btnSignIn == null) {
        break missingId;
      }

      id = R.id.btnSignUp;
      Button btnSignUp = ViewBindings.findChildViewById(rootView, id);
      if (btnSignUp == null) {
        break missingId;
      }

      id = R.id.edtId;
      TextInputEditText edtId = ViewBindings.findChildViewById(rootView, id);
      if (edtId == null) {
        break missingId;
      }

      id = R.id.edtPw;
      TextInputEditText edtPw = ViewBindings.findChildViewById(rootView, id);
      if (edtPw == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.linearLayout4;
      LinearLayout linearLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout4 == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.textInputLayout;
      TextInputLayout textInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout == null) {
        break missingId;
      }

      id = R.id.textInputLayout2;
      TextInputLayout textInputLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout2 == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.title01;
      TextView title01 = ViewBindings.findChildViewById(rootView, id);
      if (title01 == null) {
        break missingId;
      }

      return new ActivityMainSignInBinding((ConstraintLayout) rootView, btnClose, btnKakaoSignIn,
          btnSignIn, btnSignUp, edtId, edtPw, linearLayout, linearLayout4, main, textInputLayout,
          textInputLayout2, textView, textView2, title01);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
